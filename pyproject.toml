# POETRY CONFIG

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "easyScienceCore"
version = "0.1.0"
description = "Generic logic for easyScience libraries"
license = "GPL-3.0"
authors = ["Simon Ward"]
readme = "README.md"
homepage = "https://github.com/easyScience/easyCore"
documentation = "https://github.com/easyScience/easyCore"
classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",  # Define that your audience are developers
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",  # Again, pick a license
    "Programming Language :: Python :: 3 :: Only",
]
include = ["CHANGELOG.md"]
packages = [ { include = "easyCore" } ]

[tool.poetry.dependencies]
python = "^3.7" # "^3.8" generates error when installing PySide2 in easyAppGui
numpy = "^1.19"
pint = "^0.16"
uncertainties = "^3.1"
lmfit = "^1.0"
bumps = "^0.8"
asteval = "^0.9.23"
DFO-LS = {version = "^1.2", optional = true}
xarray = "^0.16"
#pint-xarray = "^0.2"

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
codecov = "^2.1.11"
matplotlib = "^3.2.2"
doc8 = "^0.8.0"
readme-renderer = "^17.4"
Sphinx = "^4.0.2"
sphinx-rtd-theme = "^0.5.2"
sphinx-autodoc-typehints = "^1.12.0"
sphinx-gallery = "^0.9.0"

[tool.github.info]
organization = 'easyScience'
repo = 'easyCore'

[tool.coverage.run]
source = ['easyCore']

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}
envs = ["main"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{37,38,39}
[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows
[testenv]
passenv =
    CI
    GITHUB_ACTIONS
    GITHUB_ACTION
    GITHUB_REF
    GITHUB_REPOSITORY
    GITHUB_HEAD_REF
    GITHUB_RUN_ID
    GITHUB_SHA
    COVERAGE_FILE
deps = coverage
whitelist_externals = poetry
commands =
    poetry install -vvv
    poetry run pytest --cov --cov-report=xml
"""
